import java.io.IOException;
import java.util.ArrayList;
import java.util.List;

import org.apache.commons.cli.CommandLine;
import org.apache.commons.cli.CommandLineParser;
import org.apache.commons.cli.DefaultParser;
import org.apache.commons.cli.HelpFormatter;
import org.apache.commons.cli.Option;
import org.apache.commons.cli.Options;
import org.apache.commons.cli.ParseException;

import com.example.Edif_parser_mod.EdifObject;
import com.example.Edif_parser_mod.EdifRoot;
import com.example.Edif_parser_mod.EdifVersion;
import com.example.Edif_parser_mod.Edif_parser_mod;

public class Main {
	
	public static void main(String[] args) {
		
		Options options = new Options();
		options.addOption(Option.builder("i")
				.longOpt("input")
				.hasArg()
				.required()
				.desc("input file")
				.build());
		
		CommandLineParser parser = new DefaultParser();
		HelpFormatter formatter = new HelpFormatter();
		CommandLine cmd;
		
		try {
			cmd = parser.parse(options, args);
		} catch (ParseException e) {
			System.out.println(e.getMessage());
			formatter.printHelp("utility-name", options);
			System.exit(1);
			return;
		}
		
		String filename = cmd.getOptionValue("input");
		
		EdifRoot edifRoot = null;
		try {
			edifRoot = Edif_parser_mod.readEdifFile(filename);
		} catch (IOException e) {
			System.out.println("Error reading file: " + e.getMessage());
			System.exit(1);
			return;
		}
		
		EdifObject obj = edifRoot.getObject("edif.edifversion");
		List<Integer> indexes = new ArrayList<>();
		indexes.add(0);
		indexes.add(1);
		indexes.add(2);
		EdifVersion version = obj.getParams(indexes);
		
		System.out.println("Edif version: " + version.get(0) + " " + version.get(1) + " " + version.get(2));
		
		if (version.get(0).equals("2") && version.get(1).equals("0") && version.get(2).equals("0")) {
			System.out.println(";)");
			System.out.println(edifRoot.getObject("edif.library").output());
		}
		
		System.exit(0);
	}
}